async function onIdle(astroId, options, getHydrateCallback) {
  const cb = async () => {
    const roots = document.querySelectorAll(`astro-root[uid="${astroId}"]`);
    if (roots.length === 0) {
      throw new Error(`Unable to find the root for the component ${options.name}`);
    }
    let innerHTML = null;
    let fragment = roots[0].querySelector(`astro-fragment`);
    if (fragment == null && roots[0].hasAttribute("tmpl")) {
      let template = roots[0].querySelector(`template[data-astro-template]`);
      if (template) {
        innerHTML = template.innerHTML;
        template.remove();
      }
    } else if (fragment) {
      innerHTML = fragment.innerHTML;
    }
    const hydrate = await getHydrateCallback();
    for (const root of roots) {
      hydrate(root, innerHTML);
    }
  };
  if ("requestIdleCallback" in window) {
    window.requestIdleCallback(cb);
  } else {
    setTimeout(cb, 200);
  }
}
export {
  onIdle as default
};
